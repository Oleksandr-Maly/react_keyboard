{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyUp","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAG,iKAeZ,OAfY,oCACdC,MAAyB,CACvBC,IAAK,IACL,EAUFC,YAAc,SAACC,GAAoB,OACjC,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,KAAM,EAClC,EAgBA,OAhBA,8CAVD,WACEI,SAASC,iBAAiB,QAASC,KAAKL,YAC1C,GAAC,kCAED,WACEG,SAASG,oBAAoB,QAASD,KAAKL,YAC7C,GAAC,oBAMD,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAK,SAClB,mBAAGA,UAAU,eAAc,SAErBR,EAC2B,mCACGA,EAAG,KAD/B,6BAMd,KAAC,EA/Ba,CAASS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAG,IACJR,SAASS,eAAe,Q","file":"static/js/main.d9ced5c9.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.Component {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => (\n    this.setState({ key: event.key })\n  );\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            !(key)\n              ? 'Nothing was pressed yet'\n              : `The last pressed key is [${key}]`\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}